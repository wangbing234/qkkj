package net.onlineshop.services.front.catalog.bean;import java.io.Serializable;import java.util.ArrayList;import java.util.List;import net.onlineshop.services.front.account.impl.ImageUtils;import net.onlineshop.services.front.news.bean.News;import net.onlineshop.services.front.product.bean.Product;public class Catalog extends net.onlineshop.services.common.Catalog implements Serializable {	private static final long serialVersionUID = 1L;	private List<Catalog> children;	private List<News> news;// 属于该目录的文章列表	private List<Product> superMenuProducts;// 首页吸附菜单里面展示的热卖推荐商品列表	private List<Product> products;//当前分类下的产品	private String picurl160;	private String picurl400;	private Boolean checked=false;	/**	 * 门户左侧热门商品列表 1、加载所有大类的热门商品列表 2、加载所有小类的热门商品列表	 */	private List<Product> hotProducts;	public Catalog() {		super();	}	public Catalog(String id, String name) {		super(id, name);	}	public void clear() {		super.clear();		if (children != null) {			children.clear();		}		children = null;		if (news != null && news.size() > 0) {			for (int i = 0; i < news.size(); i++) {				News n = news.get(i);				n.clear();				n = null;			}			news.clear();			news = null;		}		if (superMenuProducts != null) {			superMenuProducts.clear();			superMenuProducts = null;		}		if (hotProducts != null) {			hotProducts.clear();			hotProducts = null;		}	}	public List<News> getNews() {		return news;	}	public void setNews(List<News> news) {		this.news = news;	}	public List<Catalog> getChildren() {		return children;	}	public void setChildren(List<Catalog> children) {		this.children = children;	}	public List<Product> getHotProducts() {		return hotProducts;	}	public void setHotProducts(List<Product> hotProducts) {		this.hotProducts = hotProducts;	}	public List<Product> getSuperMenuProducts() {		return superMenuProducts;	}	public void setSuperMenuProducts(List<Product> superMenuProducts) {		this.superMenuProducts = superMenuProducts;	}		public List<Product> getProducts() {		return products;	}	public void setProducts(List<Product> products) {		this.products = products;	}	public String getPicurl160() {		if (this.getPicurl() != null && !"".equals(this.getPicurl())) {			picurl160 = ImageUtils.replaceLast(this.getPicurl(),"_3", "_1");		}		return picurl160;	}	public void setPicurl160(String picurl160) {		this.picurl160 = picurl160;	}	public String getPicurl400() {		if (this.getPicurl() != null && !"".equals(this.getPicurl())) {			picurl400 =ImageUtils.replaceLast(this.getPicurl(),"_3", "_2");		}		return picurl400;	}	public void setPicurl400(String picurl400) {		this.picurl400 = picurl400;	}	public Boolean getChecked() {		return checked;	}	public void setChecked(Boolean checked) {		this.checked = checked;	}		@Override    public Catalog clone() { 		Catalog clone = null;         try {			clone = (Catalog) super.clone();		} catch (CloneNotSupportedException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}        return clone;     }	}