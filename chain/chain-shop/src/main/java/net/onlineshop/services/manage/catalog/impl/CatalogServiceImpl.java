package net.onlineshop.services.manage.catalog.impl;import java.util.LinkedList;import java.util.List;import net.onlineshop.core.ServersManager;import net.onlineshop.services.manage.catalog.CatalogService;import net.onlineshop.services.manage.catalog.bean.Catalog;import net.onlineshop.services.manage.catalog.dao.CatalogDao;import net.onlineshop.services.manage.product.bean.Product;import net.onlineshop.services.manage.product.dao.ProductDao;public class CatalogServiceImpl extends ServersManager<Catalog> implements CatalogService {	private CatalogDao catalogDao;	private ProductDao productDao;	public void setCatalogDao(CatalogDao catalogDao) {		this.catalogDao = catalogDao;	}		public void setProductDao(ProductDao productDao) {		this.productDao = productDao;	}	// 加载根节点	public List<Catalog> loadRoot(Catalog e) {		if (e == null) {			e = new Catalog();		}		e.setPid("0");		List<Catalog> root = catalogDao.selectList(e);		for (int i = 0; i < root.size(); i++) {			Catalog ee = root.get(i);			loadChildrenByPid(ee);		}		Catalog top = new Catalog();		top.setName("-");		top.setId("0");		top.setPid("0");		root.add(0, top);		return root;	}	/**	 * 加载指定节点下的全部子节点	 * 	 * @param item	 */	private void loadChildrenByPid(Catalog item) {		Catalog e = new Catalog();		e.setPid(item.getId());		e.setType(item.getType());		item.setChildren(catalogDao.selectList(e));		if (item.getChildren() != null && item.getChildren().size() > 0) {			for (int i = 0; i < item.getChildren().size(); i++) {				loadChildrenByPid(item.getChildren().get(i));			}		}	}	/**	 * 加载指定节点下的全部子节点	 * 	 * @param item	 */	private void loadChildrenByPid(List<String> ids, String id) {		Catalog e = new Catalog();		e.setPid(id);		List<Catalog> items = catalogDao.selectList(e);		if (items == null || items.size() == 0) {			if(ids.indexOf(id)==-1)			ids.add(id);			return;		}		for (int i = 0; i < items.size(); i++) {			Catalog ee = items.get(i);			if(ids.indexOf(ee.getId())==-1)				ids.add(ee.getId());			loadChildrenByPid(ids, ee.getId());		}	}	@Override	public String deleteByID(String id) {		Product pro=new Product();		pro.setCatalogID(id);		List<Product> list = productDao.selectList(pro);		if(list!=null && !list.isEmpty())			return "该分类已经被使用，请先删除分类下的商品！";		List<String> ids = new LinkedList<String>();		ids.add(id);		loadChildrenByPid(ids, id);		if(ids!=null && ids.size()==1) {			catalogDao.deletes(ids);		}		else {			return "该分类下有子分类,请先删除子分类！";		}		return "";	}}